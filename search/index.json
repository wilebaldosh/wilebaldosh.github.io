
{
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
    "pages": [{"date":"2024-05-03","image":"","imageAlt":"","link":"http://localhost:1313/posts/2024-05-03-preparar-emacs-orgmode-hugo-blog/","summary":"He tenido esa idea loca de escribir en Emacs y crear un blog. La ociosidad es la madre de todos los vicios, así que vamos por ello.\nTengo dos laptops, una MackBook Pro de mediados del 2012, y una Lenovo. Ambos equipos me han salido muy buenos, así que la idea es poder escribir en ambos equipos y tener sincronizados los archivos.\nSoftware Los artículos están escritos en Emacs utilizando org-mode para su redacción y ox-hugo como exportador markdown compatible con Hugo que es el encargado de generar el sitio.","tags":["blog","emacs","hugo","orgmode"],"text":"he tenido esa idea loca de escribir en emacs y crear un blog. la ociosidad es la madre de todos los vicios, así que vamos por ello.\ntengo dos laptops, una mackbook pro de mediados del 2012, y una lenovo. ambos equipos me han salido muy buenos, así que la idea es poder escribir en ambos equipos y tener sincronizados los archivos.\nsoftware los artículos están escritos en emacs utilizando org-mode para su redacción y ox-hugo como exportador markdown compatible con hugo que es el encargado de generar el sitio.\nen el momento de escribir esta publicación el software utilizado para la creación del blog es:\nemacs --version gnu emacs 29.3 copyright (c) 2024 free software foundation, inc. gnu emacs comes with absolutely no warranty. you may redistribute copies of gnu emacs under the terms of the gnu general public license. for more information about these matters, see the file named copying. m-x org-version\norg mode version 9.5.5 (release_9.5.5 @ usr/share/emacs/28.2/lisp/org)\nm-x ox-hugo\nox-hugo 20221028.1631 installed hugo markdown back-end for org export enginey\nhugo version\nhugo v0.109.0+extended linux/amd64 builddate=unknown\nen la raspberry pi utilizo el siguiente docker-compose para desplegar una imagen de hugo\nservices: hugo: image: klakegg/hugo:ext-alpine entrypoint: /bin/sh volumes: - \u0026#34;/home/carlos/web/:/src\u0026#34; ports: - \u0026#34;1313:1313\u0026#34; stdin_open: true # docker run -i tty: true # docker run -t home/carlos/web se corresponde con la carpeta public del proyecto\n. ├── archetypes ├── assets ├── content │ └── posts ├── data ├── i18n ├── layouts ├── public ├── resources │ └── _gen ├── static └── themes └── hugo-ficurinia referencias:el blog de lázaro\n","title":"Preparando Emacs, Org-Mode y Hugo para este blog"},{"date":"2024-05-02","image":"","imageAlt":"","link":"http://localhost:1313/posts/2024-05-02-regexp-comillas-inicio-y-fin/","summary":"¡Tenía un problema! Debía agregar comillas dobles \u0026lsquo;\u0026quot;\u0026rsquo; al inicio y al final de 120 líneas diferentes, por lo que no debería ser una tarea manual. Para ello, tuve que utilizar las expresiones regulares (regexp).\nPara agregar texto al inicio de cada línea:\nSi se hace en un buffer:\nPresiona M-\u0026lt; para ir al establecer una marca al inicio.\nSi se hace en una región:\nPresiona C-SPC al principio de la primera línea.","tags":["emacs"],"text":"¡tenía un problema! debía agregar comillas dobles \u0026lsquo;\u0026quot;\u0026rsquo; al inicio y al final de 120 líneas diferentes, por lo que no debería ser una tarea manual. para ello, tuve que utilizar las expresiones regulares (regexp).\npara agregar texto al inicio de cada línea:\nsi se hace en un buffer:\npresiona m-\u0026lt; para ir al establecer una marca al inicio.\nsi se hace en una región:\npresiona c-spc al principio de la primera línea.\npor último: m-x replace-regexp ret ^ ret tutexto ret\u0026quot;=, para agregar \u0026lsquo;tutexto\u0026rsquo;.\nto do this to a region, use string-insert-rectangle. set the mark (c-spc) at the beginning of the first line you want to prefix, move the cursor to last line to be prefixed, and type m-x string-insert-rectangle ret. to do this for the whole buffer, type c-x h m-x string-insert-rectangle ret.\nif you are trying to prefix a yanked mail message with ‘\u0026gt;’, you might want to set the variable mail-yank-prefix. in message buffers, you can even use m-; to cite yanked messages (m-; runs the function comment-region, it is a general-purpose mechanism to comment regions) (see how do i change the included text prefix in mail/news followups?).\n","title":"Añandiendo caracteres al inicio y al final de varias líneas."},{"date":"2024-05-01","image":"","imageAlt":"","link":"http://localhost:1313/posts/2024-05-01-bienvenida/","summary":"Hola, bienvenidos a mi blog! Sí, el nuevo. Soy medio vago y seguido cambio de url y de contenido. Espero que esta se la definitiva.","tags":["general"],"text":"hola, bienvenidos a mi blog! sí, el nuevo. soy medio vago y seguido cambio de url y de contenido. espero que esta se la definitiva.\n","title":"Bienvenida"}]
}

